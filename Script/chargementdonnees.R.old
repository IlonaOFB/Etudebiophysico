# exploration des métriques de l'I2M2 à partir de Hub'eau

#----Mise en place du jeu de données----

#----Chargement des librairies----
library(hubeau)
library(dplyr)
library(stringr) #pour str_extract
library(ggplot2)
library(tidyverse)
library(sf)
library(purrr)
library(cowplot)
library(DT)
library(httr)#utiliser POST pour calcul i2m2 à partir du SEEE
library(trend)
library(ggrepel)
library(mapview)

source(file="../Exploitationindicesminv/R/Fonctions_unitaires_appel_API.R")
source(file = "../Exploitationindicesminv/R/mk_st_by_group.R")
source(file = "../Exploitationindicesminv/R/Mann_kendall_div.R")
source(file = "../Exploitationindicesminv/R/Seee_to_df.R")
source(file = "../Exploitationindicesminv/R/Calcule_I2M2_métriques.R")



#################################################################################
#                       import des métriques I2M2                               #
#################################################################################

dep <- c('22','29','35','56') # choix des numéros de département

## I2M2 et métriques
##l'interrogation de l'API est couteuse
# aussi , on le fait une fois et on enregistre les donnees dans le fichier Multi_indice_minv
if (file.exists("../Exploitationindicesminv/Data/Multi_indice_minv.Rdata"))
{
  load("../Exploitationindicesminv/Data/Multi_indice_minv_all.Rdata")
} else
{
  Multi_indice_minv <- map_df(dep,f_get_minv_departement)%>%
    mutate(annee=year(date_prelevement)) %>%
    select("code_station_hydrobio","code_qualification","libelle_qualification","libelle_indice","libelle_station_hydrobio","date_prelevement","code_indice","resultat_indice","latitude","longitude","code_departement","annee") %>% 
    arrange(code_station_hydrobio,annee)
  
  save(Multi_indice_minv,file="../Exploitationindicesminv/Data/Multi_indice_minv_all.Rdata")
}

## rajout des résultats de l'année (non qualifiés)
#on checke avant si on a de la données dans Fichier_SEEE/
Liste_fichiers <-  list.files("../Fichiers_SEEE//",pattern="*.txt")
if (length(Liste_fichiers!=0)){
  data_entree <- Seee_to_df("../Fichiers_SEEE/")
  donnees_metriques_complementaires <- calcule_SEEE_I2M2(data_entree) %>% 
    rename(code_station_hydrobio=CODE_STATION) %>%
    rename(code_indice=CODE_PAR) %>% 
    rename(resultat_indice=RESULTAT) %>% 
    filter(!is.na(resultat_indice)) %>% select(2,3,4,6) %>% 
    rename(date_prelevement=DATE) %>% 
    mutate(annee=str_sub(date_prelevement,start=7,end=10))#le sul moyen que j'ai trouvé pour recupérer l'année !
  Stations <- select(Multi_indice_minv,code_station_hydrobio,libelle_station_hydrobio,latitude,longitude,code_departement)%>%
    unique()
  
  donnees_metriques_complementaires <- left_join(donnees_metriques_complementaires,Stations,by='code_station_hydrobio') %>% 
    select(1,6,2,3,4,7,8,9,5)
  #on amende le DF initial
  Multi_indice_minv <- rbind(Multi_indice_minv,donnees_metriques_complementaires) %>%   arrange(code_station_hydrobio,annee)
}else {
  print ("pas de données complémentaires trouvées dans le dossier Data")
}

##

## Stations non retenues (donnéees < 4 ans)

#on vire s'il y a peu de données par paramètre (au moins 4 donnees/station/paramètre)
#on suppose que pour chaque indice/metrique on a le même nb d'analyses
#on va donc compter pour i2m2 et virer les stations "pauvres" en données
comptemulti <- count(Multi_indice_minv,code_station_hydrobio,code_indice) %>%  filter(n>5) %>% filter(code_indice==7613) %>%   select("code_station_hydrobio")
Non_retenu <- count(Multi_indice_minv,code_station_hydrobio,code_indice,libelle_station_hydrobio) %>%  filter(n<=3) %>% filter(code_indice==7613) %>% select("code_station_hydrobio","libelle_station_hydrobio","n") %>% rename("Nb prélèvements"=n)
datatable(Non_retenu,class = 'cell-border stripe',options =
            list( iDisplayLength=10,
                  bLengthChange=TRUE,                       
                  bFilter=TRUE ,                                   
                  bInfo=TRUE,
                  rowid = FALSE,
                  autoWidth = FALSE,
                  ordering = TRUE,
                  scrollX = TRUE,
                  borders = TRUE,
                  columnDefs = list(list(className = 'dt-center', targets ="_all"))
            ),rownames=FALSE#enlever le numero des lignes
)


#Stations_a_garder <- unique(comptemulti$code_station_hydrobio)
Multi_indice_minv_s <- filter(Multi_indice_minv,Multi_indice_minv$code_station_hydrobio%in%comptemulti$code_station_hydrobio) %>% arrange(code_station_hydrobio,annee) #normalement la tri est deja fait plus haut mais je me méfie !

#----Obtention du jeu de données sur lequel on va travailler

#On nettoie le jeu de donnée on ne garde seulement que les indices qui nous intéresse
clean_minv<-filter(Multi_indice_minv_s,code_indice  %in% c('8058','8054','8056','8055','8057','7613'))
clean_minv<-clean_minv %>%
  filter(libelle_qualification!="incertaine")

#On visualise les stations 
stations_map<- clean_minv %>%
  select(code_station_hydrobio,libelle_station_hydrobio,longitude,latitude) %>%
  distinct()
mapview(stations_map, xcol="longitude", ycol="latitude", crs=4326, grid= FALSE, layer.name="Stations",cex=4)
mapview(stations_map %>% filter(code_station_hydrobio=="04195000"),
        xcol="longitude", ycol="latitude", crs=4326, grid= FALSE, layer.name="Stations",cex=4) 

#Physico-chimie
if (file.exists("../Exploitationindicesminv/Data/parametres_physico.Rdata")) {
  
  load("../Exploitationindicesminv/Data/parametres_physico.Rdata")  # Charger les données existantes
  
  
} else {
  
  parametres_physico <- recuperer_donnees_physico(stations)  # Récupérer les données
  save(parametres_physico, file = "../Exploitationindicesminv/Data/parametres_physico.Rdata")  # Sauvegarder
  
}

nb_stations <- parametres_physico %>%
  distinct(code_station) %>%
  nrow()
print(nb_stations)



##On nettoie jeu de donnee
library(lubridate)
parametres_physico<-parametres_physico %>%
  select(code_station,libelle_station,libelle_fraction,code_fraction,code_parametre,resultat,libelle_parametre,libelle_parametre,date_prelevement,code_support) %>%
  rename(code_station_hydrobio=code_station) %>% 
  filter(code_support==3)
parametres_physico<- parametres_physico %>% 
  filter(!is.na(resultat))
parametres_physico<-parametres_physico %>%
  mutate(annee=year(date_prelevement)) %>%
  arrange(code_station_hydrobio,annee)
parametres_physico<- parametres_physico %>% 
  mutate(mois=month(date_prelevement)) %>% 
  mutate(jour=day(date_prelevement))

#On enlève les doublons 
parametres_physico <- unique(parametres_physico)

stations_parametre<-unique(parametres_physico$code_station_hydrobio)
code_pc<-unique(parametres_physico$code_parametre)

#Nombre total d'analyses par année 
nb_analyses_par_annee_pc<- parametres_physico %>%
  group_by(annee)%>%
  summarise(nb_analyses=n(),.groups="drop")
print(nb_analyses_par_annee_pc)

#nombre d'années par station
nb_annees_par_station_pc <- parametres_physico %>%
  group_by(code_station_hydrobio) %>%
  summarise(nb_annees = n_distinct(annee), .groups = "drop")

# Affichage du résultat
print(nb_annees_par_station_pc)


#on regarde s'il y a des doublons
count(parametres_physico,code_station_hydrobio,code_parametre,mois,annee,jour,resultat) %>% filter(n>1 & code_parametre%in%code_pc)
#on voit que pour certains cours d'eau on a fait deux prélèvements par anresultat#on voit que pour certains cours d'eau on a fait deux prélèvements par an, peut être qu'il y a eu un aléas ou un paramétre douteux à vérif



parametre_trans <- parametres_physico %>%
  select(code_station_hydrobio,annee,mois,jour,code_parametre,resultat) %>% 
  distinct() %>% 
  pivot_wider(names_from = "code_parametre",
              values_from = "resultat")

#On charge le jeu de donnees IBD 
if (file.exists("../Exploitationindicesminv/Data/Indice_ibd.Rdata"))
{
  load("../Exploitationindicesminv/Data/Indice_ibd.Rdata")
} else
{
  Indice_ibd <- map_df(dep,f_get_ibd_departement)%>%
    mutate(annee=year(date_prelevement)) %>%
    select(-c(coordonnee_x,coordonnee_y,uri_station_hydrobio,code_projection,code_cours_eau,libelle_cours_eau,uri_cours_eau,code_masse_eau,libelle_masse_eau,uri_masse_eau,code_sous_bassin,libelle_sous_bassin,code_bassin,libelle_bassin,code_commune,libelle_commune, libelle_departement,code_region,libelle_region,code_support,libelle_support, code_methode,geometry.type,geometry.crs.type,geometry.crs.properties.name,geometry.coordinates1,
              geometry.coordinates2,code_prelevement,code_banque_reference,code_operation_prelevement)) %>% 
    filter(!libelle_qualification%in%c("incertaine","non définissable","non qualifié","incorrecte")) %>%
    filter(!libelle_indice%in%c("Nombre de taxons contributifs de l'IBD","Nombre d'unités diatomiques contributives","Nombre de taxons pris en compte pour le calcul de l'IBD ancien","Indice Biologique Diatomées ancien")) %>%
    arrange(code_station_hydrobio,annee)
  
  save(Indice_ibd,file="../Exploitationindicesminv/Data/Indice_ibd.Rdata")
}

nb_stations <- clean_ibd %>%
  distinct(code_station_hydrobio) %>%
  nrow()
print(nb_stations)


comptemulti_ibd <- count(Indice_ibd,code_station_hydrobio,code_indice) %>%  filter(n>5) %>% filter(code_indice==5856) %>% select("code_station_hydrobio")
clean_ibd<- filter(Indice_ibd,Indice_ibd$code_station_hydrobio%in%comptemulti_ibd$code_station_hydrobio) %>% arrange(code_station_hydrobio,annee)

#Nombre total d'analyses par année 
nb_analyses_par_annee_ibd<- clean_ibd %>%
  group_by(annee)%>%
  summarise(nb_analyses=n(),.groups="drop")
print(nb_analyses_par_annee_ibd)

#nombre d'années par station
nb_annees_par_station_ibd <- clean_ibd %>%
  group_by(code_station_hydrobio) %>%
  summarise(nb_annees = n_distinct(annee), .groups = "drop")

# Affichage du résultat
print(nb_annees_par_station_pc)

#on regarde s'il y a des doublons
count(clean_ibd,code_station_hydrobio,code_indice,annee,resultat_indice) %>% filter(n>1 & code_indice == "5856")
#on voit que pour certains cours d'eau on a fait deux prélèvements par anresultat#on voit que pour certains cours d'eau on a fait deux prélèvements par an, peut être qu'il y a eu un aléas ou un paramétre douteux à vérif


ibd_trans <- clean_ibd %>%
  select(code_station_hydrobio,annee,code_indice,resultat_indice) %>% 
  distinct() %>% 
  pivot_wider(names_from = "code_indice",
              values_from = "resultat_indice")

